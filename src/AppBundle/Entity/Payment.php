<?php

/*
:: Payment.php ::
- :: Attendee (Single)
- RegisteredAt (Date) -> Autogenerated
- Amount (Decimal)
- Concept (String)
  - Feature
  - Access
  - Upgrade
  - Downgrade
- Details (Text)
- Access level (int) -> null for features
- Shirts to add (int)
- Is validated (Bool)
- State (String)
  - Pending
  - Validated
  - Returned
  - Canceled
*/ 

namespace AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * @ORM\Entity
 * @ORM\Table(name="payments")
 */
class Payment
{
  /**
   * @ORM\Id
   * @ORM\GeneratedValue(strategy="AUTO")
   * @ORM\Column(type="integer")
   */
  private $id;

  /**
   * @Assert\Date()
   * @ORM\Column(type="datetime")
   */
  private $registeredAt;

  /**
   * @Assert\NotBlank()
   * @Assert\Type("decimal")
   * @ORM\Column(type="decimal")
   */
  private $amount;

  /**
   * @Assert\NotBlank()
   * @Assert\Type("string")
   * @ORM\Column(type="string")
   */
  private $concept = "access";

  /**
   * @ORM\Column(type="text")
   */
  private $details;

  /**
   * @ORM\Column(type="int")
   */
  private $accessLevel = 1;

  /**
   * @ORM\Column(type="int")
   */
  private $shirtsToAdd = 0;

  /**
   * @Assert\Type("bool")
   * @ORM\Column(type="bool")
   */
  private $isValidated = false;

  /**
   * @Assert\NotBlank()
   * @Assert\Type("string")
   * @ORM\Column(type="string")
   */
  private $state = "pending";

  public function getId()
  {
    return $this->id;
  }

  public function getRegisteredAt()
  {
    return $this->registeredAt;
  }

  public function setRegisteredAt()
  {
    $this->registeredAt = date_create();
  }

  public function getAmount()
  {
    return $this->amount;
  }

  public function setAmount($amount)
  {
    $this->amount = $amount;
  }

  public function getConcept()
  {
    return $this->concept;
  }

  public function setConcept($concept)
  {
    $this->concept = $concept;
  }

  public function getDetails()
  {
    return $this->details;
  }

  public function setDetails($details)
  {
    $this->details = $details;
  }

  public function getAccessLevel()
  {
    return $this->accessLevel;
  }

  public function setAccessLevel($accessLevel)
  {
    $this->accessLevel = $accessLevel;
  }

  public function getShirtsToAdd()
  {
    return $this->shirtsToAdd;
  }

  public function setShirtsToAdd($shirtsToAdd)
  {
    $this->shirtsToAdd = $shirtsToAdd;
  }

  public function getIsValidated()
  {
    return $this->isValidated;
  }

  public function setIsValidated($isValidated)
  {
    $this->isValidated = $isValidated;
  }

  public function getState()
  {
    return $this->state;
  }

  public function setState($state)
  {
    $this->state = $state;
  }
}